steps:
# Build the container image
# update the gcr.io/[project-id]/[build-image-name]
- id: Docker build
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '${_REPO_REGION}/${_GLOBAL_ARTIFACT}/${_REPO_NAME}/${_SERVICE_NAME}', '.']

# Push the container image to Artifact Registry
- id: Container image push
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', '${_REPO_REGION}/${_GLOBAL_ARTIFACT}/${_REPO_NAME}/${_SERVICE_NAME}']

- id: Cloud run deploy
  name: google/cloud-sdk
  args:
  - gcloud
  - run
  - deploy
  - ${_SERVICE_NAME}
  - --image=${_REPO_REGION}/${_GLOBAL_ARTIFACT}/${_REPO_NAME}/${_SERVICE_NAME}
  - --region=${_REGION}
  - --platform=managed
  - --allow-unauthenticated
  - --max-instances=5
  - --timeout=3600
  - --service-account=${_SERVICE_ACCOUNT}
  - --project=${_PROJ_ID}
  - '--set-env-vars'
  - 'MODEL_ID=gemini-1.0-pro-001,
     PROJECT_ID=${_PROJ_ID},
     SECRET_ID=qz-dev-photon-secret'


images:
- ${_REPO_REGION}/${_GLOBAL_ARTIFACT}/${_REPO_NAME}/${_SERVICE_NAME}

options:
  logging: CLOUD_LOGGING_ONLY
  
substitutions:
  _ENV: np
  _CUST: qz
  _CHNL: dev
  _CLIENT_PRJ_NUM: "01"
  _REGION: us-central1
  _REPO_REGION: us-docker.pkg.dev
  _REPO_NAME: ${_CUST}-${_CHNL}-repo
  _SERVICE_NAME: ${_CUST}-${_CHNL}-photon
  _GLOBAL_ARTIFACT: glb-qz-artifactory
  _PROJ_ID: ${_ENV}-${_CUST}-${_CHNL}-${_CLIENT_PRJ_NUM}
  _SERVICE_ACCOUNT: sa-${_PROJ_ID}@${_PROJ_ID}.iam.gserviceaccount.com
